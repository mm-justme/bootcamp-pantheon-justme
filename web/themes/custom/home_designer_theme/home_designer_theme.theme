<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Bootstrap setting options with subtheme ones.
 */
function home_theme_designer_form_system_theme_settings_alter(
  &$form,
  FormStateInterface $form_state,
): void {
  $form['components']['navbar']['bootstrap_navbar_top_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
  $form['components']['navbar']['bootstrap_navbar_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
}

/**
 * Preprocess hero_section.
 */
function home_designer_theme_preprocess_paragraph__hero_section(
  array &$variables,
): void {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = $variables['paragraph'];

  $indicators = [];

  if ($paragraph->hasField('field_indicators') && !$paragraph->get('field_indicators')
    ->isEmpty()) {
    $terms = $paragraph->get('field_indicators')->referencedEntities();

    foreach ($terms as $term) {
      $title = $term->label();

      $desc = ($term->hasField('field_description') && !$term->get('field_description')
        ->isEmpty())
        ? $term->get('field_description')->value
        : '';

      $img_url = '';
      if ($term->hasField('field_icon') && !$term->get('field_icon')
        ->isEmpty()) {
        $file = $term->get('field_icon')->entity;
        if ($file) {
          $file_url = \Drupal::service('file_url_generator');

          $style = \Drupal::entityTypeManager()
            ->getStorage('image_style')
            ->load('thumbnail');

          $uri = $file->getFileUri();
          $img_url = $style ? $style->buildUrl($uri) : $file_url->generateString($uri);
        }
      }

      $indicators[] = [
        'title' => $title,
        'desc' => $desc,
        'img' => $img_url,
      ];
    }
  }
  $variables['indicators'] = $indicators;
}
