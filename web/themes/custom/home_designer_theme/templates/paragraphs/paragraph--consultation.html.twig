{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set classes = [
  'paragraph',
  'min-w-full',
  'md:min-w-fit',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished'
] %}

<div class="bg-[#f9f8f3] py-14 lg:pt-10 lg:pb-24 px-0 md:px-2">
  <div class="flex justify-normal md:justify-center">
    {% block paragraph %}
      <div{{ attributes.addClass(classes) }}>
        {% block content %}
          <div class="consultation-text-wrapper">
            <div class="md:max-w-sm">
              <h3 class="text-[30px] lg:text-[40px] font-family-GD leading-[1.1] uppercase font-medium mb-5 my-[10px]">
                {{ content.field_title }}
              </h3>
            </div>
            <div>
              {% if content.field_subtitle.0 %}
                <div
                    class="text-[16px] lg:text-[17px] xl:text-[20px]  font-family-RH leading-[1.6] font-normal max-w-lg">
                  {{ content.field_subtitle }}
                </div>
              {% endif %}
              <div class="consultation-link">{{ content.field_consultation_link }}</div>
            </div>
          </div>
          {{ content|without('field_title','field_subtitle','field_consultation_link') }}
        {% endblock %}
      </div>
    {% endblock paragraph %}
  </div>
</div>